version: '3'
services:
  reverse_proxy:
    image: nginx
    tty: true
    user: ${UID?err}:${GID?err}
    ports:
      - 8080:80
      - 3030:3000
    depends_on:
      - client
      - server
      - socket1
      - socket2
    volumes:
      - ./reverse_proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  client:
    image: vilkatis/angular
    container_name: ${CLIENT_HOST}
    user: ${UID?err}:${GID?err}
    entrypoint: /app/entrypoint.sh
    tty: true
    volumes:
      - ./client:/app
    depends_on:
      - server
      - socket1
      - socket2
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    environment:
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}

  consumer:
    image: vilkatis/ts-node
    container_name: consumer
    user: ${UID?err}:${GID?err}
    entrypoint: /app/entrypoint.sh
    tty: true
    volumes:
      - ./consumer:/app
    depends_on:
      - broker
      - zookeeper

  server:
    image: vilkatis/ts-node
    container_name: ${SERVER_HOST}
    user: ${UID?err}:${GID?err}
    entrypoint: /app/entrypoint.sh
    tty: true
    volumes:
      - ./server:/app
    depends_on:
      - broker
      - zookeeper
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    environment:
      SERVER_PORT: ${SERVER_PORT}

  socket1:
    image: node
    hostname: socket1
    container_name: socket1
    tty: true
    user: ${UID?err}:${GID?err}
    entrypoint: /app/entrypoint.sh
    volumes:
      - ./socket:/app
    links:
      - redis
    ports:
      - "3000:3000"

  socket2:
    image: node
    hostname: socket2
    container_name: socket2
    entrypoint: /app/entrypoint.sh
    tty: true
    user: ${UID?err}:${GID?err}
    volumes:
      - ./socket:/app
    links:
      - redis
    ports:
      - "3001:3000"

  redis:
    image: redis
    hostname: redis
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./config/redis:/data
    ports:
      - "6379:6379"
    expose:
      - 6379

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:6.0.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
